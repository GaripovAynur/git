git init .
git add .               # Команда git add добавляет содержимое рабочей директории в индекс (staging area) для последующего коммита
git add <file> <file>   
git add -p <file>       # -p - паршел т.е. частичное добавление в индекс, потом необходимо выбрать ключ s для разбивки кода на мелкие частицы
                          т.е. допустим написали код из нескольких строк, добавили только первые 2 строк.
git status

.gitignore             # Если создать такой файл и заполнить, то файлы прописанные в .gitignore не будут коммитится

git rm                  # Удаляет из диска          
git rm --cached         # Если мы добавляем в .gitignore и файл отслеживает (скорее всего файл был создан до .gitignore) то можно удаляет файл из индекса, но оставляет его в рабочем каталоге. Это означает для Git, что вы больше не хотите отслеживать файл.
git mv                  # Переименовать файл

git show                # Последний коомит просмотр
git log                 # Все изменения

git diff <commit1> <commit2> # Разница. git log посмотреть commit(хэши)
git diff HEAD~1 HEAD~2
git diff HEAD~1            # Последние изменения, HEAD~2 предпоследний

git checkout -- test.html  # Вернуть предудущий версии, можно сделать до git add
git reset HEAD test.html   # Можно вернуть из индекса, т.е. можно еще раз git add

git commit --amend          # Изменить последний commit, редактировать название и т.д.

git revert 4501d17c         # удаляется конкретный коммит
git reset --mixed           # Откат на этот хэш, а все позже этого очищает из индекса
git reset --hard 4501d17c   # Откатывает до этого хэша, а все позже этого очищает/удаляется
git reset --soft            # 
